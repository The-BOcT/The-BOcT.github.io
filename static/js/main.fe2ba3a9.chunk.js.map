{"version":3,"sources":["lib/chat-storage.ts","lib/small-functions.ts","lib/chat/normal-replies.ts","lib/chat/units.ts","lib/chat/unit-converter.ts","lib/chat/shared.ts","lib/chat-evalutor.ts","lib/chat/dot-commands.ts","lib/contexts.ts","components/loadingScreen/loadingScreen.tsx","components/boctHead/bocthead.tsx","lib/svg-render.ts","components/chatBox/chatBox.tsx","components/other/other_components.tsx","components/about/aboutField.tsx","components/settings/settingsBar.tsx","index.tsx"],"names":["storageClass","data","this","element","replyBy","replyString","push","numOfReplies","length","map","x","replyRandom","strings","RandomOf","m","n","Math","floor","random","directReplies","inWrds","outsen","words","intro","readempty","readNo","readok","readso","readage","reply","boctAge","readannoy","searchStuff","sc","slice","ss","window","open","Categories","unit","con_factor","mm","cm","km","inch","ft","miles","yards","lightyear","sqm","sqkm","sqft","acre","hectare","celsius","con_trnsTo","Number","con_trnsFro","fahrenheit","Kelvin","cubicm","liter","milliliter","gallon","pint","barrel","kg","g","lb","quintal","amu","unit_convert","usertyped","ucs_data","split","uVal","parseFloat","uValLeng","String","replace","a","b","from_unit","getUnit","to_unit","Available","Category","result","SIval","TheConverter","u","unit_details","i","Object","keys","forEach","j","includes","pre_unit_detail","assign","birthdate","Date","Diff_In_Time","now","getTime","Diff_In_Days","Days","Diff_In_Hour","Diff_In_Mins","dice","coin","chatProcessor","sentence","chat_TL","trim","toLowerCase","chat_T","word","DOt_commands","studycontent","readables","readables2","boct_general_reply","replyDefaultContext","allReplies","addReply","storage","Reply_Context","React","createContext","Loading","props","loadcomplete","setState","loaded","text","style","backgroundColor","state","id","className","onAnimationEnd","Component","BoctHead","boctClicked","bind","clickCapture","animation","headAnim","onClick","title","viewBox","d","TemplateChat","attr","c","t","TalkBox","talkBox","createRef","current","scrollTop","scrollHeight","Consumer","replyTech","ref","ChatBoct","chatInputElem","replyBasedOnHumanReply","isRecentReplyHuman","humanReplies","onlyHumanReplies","cLength","input","cText","cElem","onSubmit","e","preventDefault","value","setTimeout","type","placeholder","autoComplete","maxLength","CustomReplies","href","ThemeButton","htmlElem","document","documentElement","dataset","theme","setAttribute","localStorage","setItem","ChangeTheme","InfoButton","SettingsButton","message","AboutPanel","currentThemeCokie","getItem","Boct","lazy","Promise","all","resolve","boctModuleImport","ReactDOM","render","StrictMode","fallback","getElementById"],"mappings":"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","file":"static/js/main.fe2ba3a9.chunk.js","sourcesContent":["type ITypesOfReplies = \"h\" | \"b\" | \"cb\";\r\ninterface IChatMeta {\r\n  element: JSX.Element;\r\n  replyBy: ITypesOfReplies;\r\n  replyString: string | null;\r\n}\r\n\r\nclass storageClass {\r\n  private data: IChatMeta[];\r\n  constructor() {\r\n    this.data = [];\r\n  }\r\n\r\n  /**\r\n   * used for pushing the elems and it's metadata into the storage.\r\n   */\r\n  pushit(element: JSX.Element, replyBy: ITypesOfReplies, replyString: string | null = null) {\r\n    this.data.push({\r\n      element,\r\n      replyBy,\r\n      replyString,\r\n    });\r\n  }\r\n\r\n  get read() {\r\n    return this.data;\r\n  }\r\n\r\n  get recent() {\r\n    return this.data[this.numOfReplies - 1];\r\n  }\r\n\r\n  get numOfReplies() {\r\n    return this.data.length;\r\n  }\r\n\r\n  /**\r\n   * outputs the array of all the elems pushed into the storage.\r\n   */\r\n  get onlyElems() {\r\n    return this.data.map((x) => x.element);\r\n  }\r\n\r\n  get onlyHumanReplies() {\r\n    // eslint-disable-next-line\r\n    let human = this.data.map((x) => {\r\n      if (x.replyBy === \"h\") {\r\n        return x;\r\n      }\r\n    });\r\n    return human as IChatMeta[];\r\n  }\r\n\r\n  get isRecentReplyHuman() {\r\n    let x = this.data[this.numOfReplies - 1].replyBy === \"h\";\r\n    return x;\r\n  }\r\n}\r\n\r\nexport { storageClass };\r\nexport type { IChatMeta, ITypesOfReplies };\r\n","function replyRandom(strings: string[]): string {\r\n  let x = RandomOf(0, strings.length - 1);\r\n  return strings[x];\r\n}\r\n\r\nfunction RandomOf(m: number, n: number): number {\r\n  return Math.floor(Math.random() * (n - m + 1)) + m;\r\n}\r\n\r\nexport { replyRandom, RandomOf };\r\n","import { dice, coin, boctAge } from \"./index\";\r\n\r\nexport function boct_general_reply(studycontent: string) {\r\n  const readables = [intro, readage, readempty, readannoy, readNo, readok, readso, dice, coin];\r\n  const readables2 = [searchStuff];\r\n  let reply: string = \"hmm...Maybe\";\r\n\r\n  for (let i = 0; i < readables.length; i++) {\r\n    for (let j = 0; j < readables[i].words.length; j++) {\r\n      if (studycontent === readables[i].words[j]) {\r\n        //@ts-ignore\r\n        reply = readables[i].reply();\r\n      }\r\n    }\r\n  }\r\n  for (let i = 0; i < readables2.length; i++) {\r\n    for (let j = 0; j < readables2[i].words.length; j++) {\r\n      if (studycontent.includes(readables2[i].words[j])) {\r\n        reply = readables2[i].reply(studycontent) as string;\r\n      }\r\n    }\r\n  }\r\n\r\n  return reply;\r\n}\r\n\r\n\r\nclass directReplies {\r\n  words: string[];\r\n  replyString: string;\r\n\r\n  constructor(inWrds: string[], outsen: string) {\r\n    this.words = inWrds;\r\n    this.replyString = outsen;\r\n  }\r\n\r\n  reply() {\r\n    return this.replyString;\r\n  }\r\n}\r\n\r\nconst intro = new directReplies([\"hi\", \"hello\", \"hey\"], \"Hi to you too\");\r\n\r\nconst readempty = new directReplies([\"*empty*\", \"\"], \"Oh! Come on. Talk Something Sensible\");\r\n\r\nconst readNo = new directReplies([\"no\", \"nothing\"], \"You are basically NOTHING!!!\");\r\n\r\nconst readok = new directReplies([\"ok\", \"ohk\", \"ogk\", \"wow\", \"great\", \"excellent\", \"nice\", \"awesome\"], \"WoW\");\r\n\r\nconst readso = new directReplies([\"so\", \"what else\"], \"I am not so brilliant to say something!\");\r\n\r\nconst readage = {\r\n  words: [\"what is your age\", \"whats your age\", \"your age\"],\r\n  reply: () => `My Creation began approx ${boctAge()} ago`,\r\n};\r\n\r\nconst readannoy = {\r\n  words: [\"annoy me\", \"idiot\", \"dumb\"],\r\n  reply: () => {\r\n    return \"You're a IDIOT\";\r\n  },\r\n};\r\n\r\nconst searchStuff = {\r\n  words: [\"google\", \"bing\", \"youtube\", \"duckduckgo\"],\r\n  reply: (sc: string) => {\r\n    if (sc.slice(0, 6) === \"google\") {\r\n      let ss = sc.slice(7);\r\n      window.open(\"https://www.google.com/search?q=\" + ss);\r\n      return \"Ok, Searching Google for \" + ss;\r\n    }\r\n    if (sc.slice(0, 4) === \"bing\") {\r\n      let ss = sc.slice(5);\r\n      window.open(\"https://www.bing.com/search?q=\" + ss);\r\n      return \"Ok, Searching Bing for \" + ss;\r\n    }\r\n    if (sc.slice(0, 7) === \"youtube\") {\r\n      let ss = sc.slice(8);\r\n      window.open(\"https://www.youtube.com/results?search_query=\" + ss);\r\n      return \"Ok, Searching YouTube for \" + ss;\r\n    }\r\n    if (sc.slice(0, 10) === \"duckduckgo\") {\r\n      let ss = sc.slice(11);\r\n      window.open(\"https://duckduckgo.com/?q=\" + ss);\r\n      return \"Ok, Searching DuckDuckGo for \" + ss;\r\n    }\r\n  },\r\n};\r\n","// 1 x is equal to con_factor y (x is a unit; y is respective SI/base unit)\r\n//Ex: 1 mm is equal to 1/1000 m\r\ninterface TypesOfUnits {\r\n  unit: string[];\r\n  con_factor?: number;\r\n  con_trnsTo?: { (x: any): number };\r\n  con_trnsFro?: { (x: any): number };\r\n}\r\n\r\nconst Lengths: Record<string, TypesOfUnits> = {\r\n  m: {\r\n    unit: [\"m\", \"meter\", \"meters\", \"metre\"],\r\n    con_factor: 1,\r\n  },\r\n  mm: {\r\n    unit: [\"mm\", \"millimeter\", \"millimeters\", \"millimetre\"],\r\n    con_factor: 1 / 1000,\r\n  },\r\n  cm: {\r\n    unit: [\"cm\", \"centimeter\", \"centimeters\", \"centimetre\"],\r\n    con_factor: 1 / 100,\r\n  },\r\n  km: {\r\n    unit: [\"km\", \"kilometer\", \"kilometers\", \"kilometre\", \"Km\"],\r\n    con_factor: 1000,\r\n  },\r\n  inch: {\r\n    unit: [\"in\", \"inch\", \"inches\"],\r\n    con_factor: 1 / 39.37008,\r\n  },\r\n  ft: {\r\n    unit: [\"ft\", \"feet\", \"foot\"],\r\n    con_factor: 1 / 3.280839895,\r\n  },\r\n  miles: {\r\n    unit: [\"miles\", \"mile\", \"mi\"],\r\n    con_factor: 1 / 0.000621369,\r\n  },\r\n  yards: {\r\n    unit: [\"yard\", \"yd\"],\r\n    con_factor: 1 / 1.093613298,\r\n  },\r\n  lightyear: {\r\n    unit: [\"lightyears\", \"ly\"],\r\n    con_factor: 9460730472580800,\r\n  },\r\n};\r\n\r\nconst Areas: Record<string, TypesOfUnits> = {\r\n  sqm: {\r\n    unit: [\"sqm\", \"m2\", \"sq.meter\"],\r\n    con_factor: 1,\r\n  },\r\n  sqkm: {\r\n    unit: [\"sqkm\", \"km2\"],\r\n    con_factor: 10 ** 6,\r\n  },\r\n  sqft: {\r\n    unit: [\"sqft\", \"ft2\"],\r\n    con_factor: 0.09290304,\r\n  },\r\n  acre: {\r\n    unit: [\"ac\", \"acre\", \"acres\"],\r\n    con_factor: 4046.8564224,\r\n  },\r\n  hectare: {\r\n    unit: [\"ha\", \"hectare\", \"hectares\"],\r\n    con_factor: 10 ** 4,\r\n  },\r\n};\r\n\r\nconst Temperatures: Record<string, TypesOfUnits> = {\r\n  celsius: {\r\n    unit: [\"C\", \"celsius\", \"c\"],\r\n    con_trnsTo: function (x: any) {\r\n      return Number(x);\r\n    },\r\n    con_trnsFro: (x: any) => {\r\n      return Number(x);\r\n    },\r\n  },\r\n  fahrenheit: {\r\n    unit: [\"F\", \"fahrenheit\", \"f\"],\r\n    con_trnsTo: (x: number) => {\r\n      return (x - 32) / 1.8;\r\n    },\r\n    con_trnsFro: (x: number) => {\r\n      return x * 1.8 + 32;\r\n    },\r\n  },\r\n  Kelvin: {\r\n    unit: [\"K\", \"kelvin\", \"k\"],\r\n    con_trnsTo: (x: number) => {\r\n      return x - 273.15;\r\n    },\r\n    con_trnsFro: (x: number) => {\r\n      return x + 273.15;\r\n    },\r\n  },\r\n};\r\n\r\nconst Mass: Record<string, TypesOfUnits> = {\r\n  kg: {\r\n    unit: [\"kg\", \"kilogram\", \"Kg\", \"kilograms\"],\r\n    con_factor: 1,\r\n  },\r\n  g: {\r\n    unit: [\"g\", \"gram\", \"grams\"],\r\n    con_factor: 1 / 1000,\r\n  },\r\n  lb: {\r\n    unit: [\"lb\", \"lbs\", \"pounds\", \"pound\"],\r\n    con_factor: 0.45359237,\r\n  },\r\n  quintal: {\r\n    unit: [\"quintal\"],\r\n    con_factor: 100,\r\n  },\r\n  amu: {\r\n    unit: [\"amu\", \"u\", \"Da\"],\r\n    con_factor: 1.6605390666e-27,\r\n  },\r\n};\r\n\r\nconst Volume: Record<string, TypesOfUnits> = {\r\n  cubicm: {\r\n    unit: [\"m3\", \"cubic.m\", \"cubic-meter\"],\r\n    con_factor: 1,\r\n  },\r\n  liter: {\r\n    unit: [\"l\", \"liter\", \"liters\", \"litre\", \"litres\"],\r\n    con_factor: 0.001,\r\n  },\r\n  milliliter: {\r\n    unit: [\"ml\", \"milliliter\", \"milliliters\", \"millilitre\"],\r\n    con_factor: 0.000001,\r\n  },\r\n  gallon: {\r\n    unit: [\"gal\", \"gallon\", \"Gallon\"],\r\n    con_factor: 0.00454609,\r\n  },\r\n  pint: {\r\n    unit: [\"pt\", \"p\", \"pint\"],\r\n    con_factor: 0.0005682613,\r\n  },\r\n  barrel: {\r\n    unit: [\"bl\", \"barrel\"],\r\n    con_factor: 0.16365924,\r\n  },\r\n};\r\n\r\nconst Categories: Record<string, TypesOfUnits>[] = [Lengths, Areas, Temperatures, Volume, Mass];\r\nexport default Categories;\r\n\r\n/*\r\nconst Digital = {}\r\nconst Prefixs = {\r\n  uni: {\r\n    unit: [''],\r\n    con_factor: 1\r\n  },\r\n  deca: {\r\n    unit: ['da','deca','Deca'],\r\n    con_factor: 10\r\n  },\r\n  hecto: {\r\n    unit: ['h','hecto','Hecto'],\r\n    con_factor: 100\r\n  },\r\n  kilo: {\r\n    unit: ['k','kilo','Kilo'],\r\n    con_factor: 1e+3\r\n  },\r\n  mega: {\r\n    unit: ['M','mega','Mega'],\r\n    con_factor: 1e+6\r\n  },\r\n  giga: {\r\n    unit: ['G','giga','Giga'],\r\n    con_factor: 1e+9\r\n  },\r\n  tera: {\r\n    unit: ['T','tera','Tera'],\r\n    con_factor: 1e+12\r\n  }\r\n}*/\r\n","import { replyRandom } from \"../small-functions\";\r\nimport Categories from \"./units\";\r\n//AH BUGS!!\r\n\r\nfunction unit_convert(usertyped: string): string {\r\n  const ucs_data: string[] = usertyped.split(\" \");\r\n\r\n  if (ucs_data.length === 4) {\r\n    let uVal = parseFloat(ucs_data[1]);\r\n    let uValLeng = String(uVal).replace(\".\", \" \").length;\r\n    let uUnit = ucs_data[1].slice(uValLeng);\r\n    return TheConverter(uVal, uUnit, ucs_data[3]);\r\n  } else {\r\n    return \"Type in this Format: conv 37cm to m\";\r\n  }\r\n}\r\n\r\nfunction TheConverter(x: number, a: string, b: string): string {\r\n  let from_unit = getUnit(a);\r\n  let to_unit = getUnit(b);\r\n\r\n  if (from_unit.Available && to_unit.Available) { // eslint-disable-next-line\r\n    if (from_unit.Category == to_unit.Category) {\r\n      if (from_unit.con_factor && to_unit.con_factor) {\r\n        let result = x * (from_unit.con_factor / to_unit.con_factor);\r\n        return `${result} ${b}`;\r\n      } else if (from_unit.con_trnsTo && to_unit.con_trnsFro) {\r\n        let SIval = from_unit.con_trnsTo(x);\r\n        let result = to_unit.con_trnsFro(SIval);\r\n        return `${result}${b}`;\r\n      }\r\n    } else {\r\n      return replyRandom([\r\n        \"-_-\",\r\n        \"Conversions do not work that way\",\r\n        \"Maybe, My Scripts are incomplete. Couldn't Convert\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  return replyRandom([\"That doesn't make sense\", \"Something is very Wrong here.\"]);\r\n}\r\n\r\nfunction getUnit(u: string) {\r\n  let unit_details: {\r\n    Available: boolean;\r\n    Category?: number;\r\n    con_factor?: number;\r\n    con_trnsTo?: any;\r\n    con_trnsFro?: any;\r\n  } = {\r\n    Available: false,\r\n  };\r\n\r\n  let i = 0;\r\n  while (i < 5 && !unit_details.Available) {\r\n    let ACategory = Object.keys(Categories[i]); // eslint-disable-next-line\r\n    ACategory.forEach((j) => {\r\n      if (Categories[i][j].unit.includes(u)) {\r\n        let pre_unit_detail = {\r\n          Available: true,\r\n          Category: i,\r\n        };\r\n        unit_details = Object.assign(pre_unit_detail, Categories[i][j]);\r\n      }\r\n    });\r\n    i++;\r\n  }\r\n\r\n  return unit_details;\r\n}\r\n\r\nexport { unit_convert };\r\n","import { RandomOf } from \"../small-functions\";\r\n\r\nexport function boctAge(): string {\r\n  let birthdate: Date = new Date(2020, 4, 5, 17, 43, 0, 0);\r\n  let Diff_In_Time = Date.now() - birthdate.getTime();\r\n  let Diff_In_Days = Diff_In_Time / (1000 * 3600 * 24);\r\n  let Days = Math.floor(Diff_In_Time / (1000 * 3600 * 24));\r\n  let Diff_In_Hour = Math.floor((Diff_In_Days - Days) * 24);\r\n  let Diff_In_Mins = Math.floor(((Diff_In_Days - Days) * 24 - Diff_In_Hour) * 60);\r\n  return `${Days} days, ${Diff_In_Hour} hours and ${Diff_In_Mins} minutes`;\r\n}\r\n\r\nexport const dice = {\r\n  words: [\"roll a dice\", \"roll dice\"],\r\n  reply: () => RandomOf(1, 6),\r\n};\r\n\r\nexport const coin = {\r\n  words: [\"flip a coin\", \"toss a coin\"],\r\n  reply: () => {\r\n    let x = RandomOf(0, 1) === 1 ? \"Heads\" : \"Tails\";\r\n    return x;\r\n  },\r\n};\r\n","import { boct_general_reply, DOt_commands, unit_convert } from \"./chat/\";\r\n\r\nfunction chatProcessor(sentence: string): string {\r\n  if (sentence) {\r\n    const chat_TL: string = sentence.trim().toLowerCase();\r\n    const chat_T: string = sentence.trim();\r\n\r\n    if (chat_TL.slice(0, 4) === \"conv\") {\r\n      return unit_convert(chat_T);\r\n    } else if (chat_TL[0] === \".\" || chat_TL[0] === \"$\") {\r\n      return DOt_commands(chat_TL);\r\n    } else {\r\n      return boct_general_reply(chat_TL);\r\n    }\r\n  }\r\n\r\n  return \"Hmm... Maybe\";\r\n}\r\n\r\nexport { chatProcessor };\r\n","import { boctAge, coin } from \"./index\";\r\nimport { RandomOf } from \"../small-functions\";\r\n\r\nexport function DOt_commands(word: string): string {\r\n  let comm = word.slice(1, 5);\r\n  switch (comm) {\r\n    case \"\":\r\n      return \"Type a Dot-Command\";\r\n    case \"name\":\r\n      return \"BOcT\";\r\n    case \"age\":\r\n      return boctAge();\r\n    case \"god\":\r\n      return \"U-C-S / Chanakya\";\r\n    case \"v\":\r\n      //return `${ElemList.Version.innerHTML}`;\r\n      return \"v4.0\";\r\n    case \"url\":\r\n      return \"https://the-boct.github.io/\";\r\n    case \"code\":\r\n      return \"https://github.com/The-BOcT/\";\r\n    case \"meow\":\r\n      return \"MeooW!.....MeeeeeeWww!\";\r\n    case \"dice\":\r\n      return `${RandomOf(1, 6)}`;\r\n    case \"coin\":\r\n      coin.reply();\r\n      break;\r\n    default:\r\n      return \"INVALID DOt COMMAND\";\r\n  }\r\n  return \"hmm...Maube\";\r\n}\r\n","import React from \"react\";\r\nimport { storageClass } from \"./chat-storage\";\r\n\r\ninterface IExternalReply {\r\n  allReplies: JSX.Element[];\r\n  addReply: (reply: JSX.Element, type: \"h\" | \"b\" | \"cb\", replyString?: string) => void;\r\n  storage: storageClass;\r\n}\r\nlet replyDefaultContext: IExternalReply = {\r\n  allReplies: [],\r\n  addReply: () => {},\r\n  storage: new storageClass(),\r\n};\r\n\r\nconst Reply_Context = React.createContext<IExternalReply>(replyDefaultContext);\r\n\r\nexport { Reply_Context };\r\n","import React from \"react\";\r\nimport \"./loadingScreen.css\";\r\n\r\ntype Iloaded = {\r\n  text: string;\r\n  style: any;\r\n};\r\nclass Loading extends React.Component<{}, { loaded: Iloaded }> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: { text: \"Boct Loading...\", style: {} },\r\n    };\r\n  }\r\n\r\n  loadcomplete = () => {\r\n    this.setState({\r\n      loaded: {\r\n        text: \"Boct Loaded\",\r\n        style: { backgroundColor: \"#ff1439\" },\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"loadScreen\">\r\n        <div className=\"load\">\r\n          <div id=\"load_barr\" style={this.state.loaded.style} onAnimationEnd={this.loadcomplete}></div>\r\n          <div id=\"load_text\">{this.state.loaded.text}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { Loading };\r\n","import React from \"react\";\r\nimport { svg0 } from \"../../lib/svg-render\";\r\nimport \"./bocthead.css\";\r\n\r\nclass BoctHead extends React.Component<{ clickCapture: any; headAnim: string }, {}> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.boctClicked = this.boctClicked.bind(this);\r\n  }\r\n\r\n  boctClicked() {\r\n    this.props.clickCapture();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PageHead\">\r\n        <div id=\"heading_container\">\r\n          <h1 id=\"heading\">The BOcT</h1>\r\n        </div>\r\n        <div className=\"bot-head\">\r\n          <button id=\"BOcT\" style={{ animation: this.props.headAnim }} onClick={this.boctClicked} title=\"The BOcT\">\r\n            <svg viewBox=\"0 0 640 512\">\r\n              <path id=\"svg0\" d={svg0} />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport { BoctHead };\r\n","let svg0 = \"M32,224H64V416H32A31.96166,31.96166,0,0,1,0,384V256A31.96166,31.96166,0,0,1,32,224Zm512-48V448a64.06328,64.06328,0,0,1-64,64H160a64.06328,64.06328,0,0,1-64-64V176a79.974,79.974,0,0,1,80-80H288V32a32,32,0,0,1,64,0V96H464A79.974,79.974,0,0,1,544,176ZM264,256a40,40,0,1,0-40,40A39.997,39.997,0,0,0,264,256Zm-8,128H192v32h64Zm96,0H288v32h64ZM456,256a40,40,0,1,0-40,40A39.997,39.997,0,0,0,456,256Zm-8,128H384v32h64ZM640,256V384a31.96166,31.96166,0,0,1-32,32H576V224h32A31.96166,31.96166,0,0,1,640,256Z\";\r\nlet svg1 = \"M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z\";\r\nlet svg2 = \"M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z\";\r\nlet svg3 = \"M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z\";\r\nlet svg4 = \"M8 256c0 136.966 111.033 248 248 248s248-111.034 248-248S392.966 8 256 8 8 119.033 8 256zm248 184V72c101.705 0 184 82.311 184 184 0 101.705-82.311 184-184 184z\";\r\n\r\nexport { svg0, svg1, svg2, svg3, svg4 };\r\n","import React from \"react\";\r\nimport { svg1 } from \"../../lib/svg-render\";\r\nimport { chatProcessor, Reply_Context } from \"../../lib/\";\r\n\r\nimport \"./chatBox.css\";\r\n\r\n/**\r\n * for default chat-reply templates. for custom boct replies see other_components.tsx\r\n */\r\nclass TemplateChat extends React.Component<{ attr: [string, string] }, {}> {\r\n  render() {\r\n    let [c, t] = this.props.attr;\r\n    return (\r\n      <div className={c}>\r\n        <p>{t}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * The box where all the chat shows up\r\n */\r\nclass TalkBox extends React.Component {\r\n  talkBox: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.talkBox = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    let { talkBox } = this; //@ts-ignore\r\n    talkBox.current.scrollTop = talkBox.current.scrollHeight;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Reply_Context.Consumer>\r\n        {(replyTech) => (\r\n          <div ref={this.talkBox} className=\"talk_box\">\r\n            {replyTech?.allReplies}\r\n          </div>\r\n        )}\r\n      </Reply_Context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * The Component for the Chat-Box\r\n */\r\nclass ChatBoct extends React.Component {\r\n  chatInputElem: React.RefObject<HTMLInputElement>;\r\n  //context!: React.ContextType<typeof ReplyContext>;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.chatInputElem = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Reply_Context.Consumer>\r\n        {(replyTech) => {\r\n          let onChatSubmit = (e: any) => {\r\n            e.preventDefault();\r\n            let cText = this.chatInputElem.current?.value as string;\r\n            let cElem = <TemplateChat attr={[\"human_talk\", cText]} key={replyTech.storage.numOfReplies} />;\r\n\r\n            replyTech.addReply(cElem, \"h\", cText);\r\n            setTimeout(replyBasedOnHumanReply, 600);\r\n          };\r\n\r\n          let replyBasedOnHumanReply = () => {\r\n            if (replyTech.storage.isRecentReplyHuman) {\r\n              let humanReplies = replyTech.storage.onlyHumanReplies;\r\n              let cLength = humanReplies.length;\r\n              let input = humanReplies[cLength - 1]?.replyString as string;\r\n              let cText = chatProcessor(input);\r\n              let cElem = <TemplateChat key={cLength} attr={[\"boct_talk\", cText]} />;\r\n\r\n              replyTech.addReply(cElem, \"b\");\r\n            }\r\n          };\r\n\r\n          return (\r\n            <div id=\"Chatter\">\r\n              <TalkBox />\r\n              <div className=\"typeBox_container\">\r\n                <form className=\"typeBox\" onSubmit={onChatSubmit}>\r\n                  <input\r\n                    ref={this.chatInputElem}\r\n                    id=\"typespace\"\r\n                    type=\"text\"\r\n                    placeholder=\"Wanna talk with BOcT? Then type here..!\"\r\n                    autoComplete=\"off\"\r\n                    maxLength={120}\r\n                  />\r\n                  <button id=\"typespace_submitBtn\" type=\"submit\">\r\n                    <svg viewBox=\"0 0 448 512\">\r\n                      <path id=\"svg1\" d={svg1} />\r\n                    </svg>\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Reply_Context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport { ChatBoct };\r\n","import \"./other_components.css\";\r\n\r\nconst CustomReplies = {\r\n  InfoBoctReply: () => (\r\n    <div className=\"info_window\">\r\n      <div className=\"info_content\">\r\n        <p>Some commands for interesting replies:</p>\r\n        <ul>\r\n          <li>What is your age / your age</li>\r\n          <li>Annoy me / idiot</li>\r\n          <li>google / youtube / bing / duckduckgo *word*</li>\r\n          <li>roll a dice / roll dice</li>\r\n          <li>flip a coin / toss a coin</li>\r\n        </ul>\r\n        <hr />\r\n        <p>Also, BOcT can perform some unit-conversions in Length, Areas, Mass, Temperatures and Volume.</p>\r\n        <p>To Perform unit-conversions: conv XA to B</p>\r\n        <p>X: unit value | A: the base unit | B: the output unit</p>\r\n        <p>Ex: conv 100cm to m (outputs 1m)</p>\r\n        <hr />\r\n        <p>some DOt Commands:</p>\r\n        <ul>\r\n          <li>.name</li>\r\n          <li>.age</li>\r\n          <li>.god</li>\r\n          <li>.v</li>\r\n          <li>.code</li>\r\n          <li>.dice</li>\r\n          <li>.coin</li>\r\n        </ul>\r\n        <hr />\r\n        <p className=\"text1\">Written with ❤ in TypeScript</p>\r\n      </div>\r\n      <div className=\"info_links\">\r\n        <a href=\"https://github.com/The-BOcT/the-boct.github.io/blob/master/LICENSE.md\" title=\"Under MIT LICENSE\">\r\n          © 2020 U-C-S\r\n        </a>\r\n        <br />\r\n        <a href=\"https://github.com/The-BOcT/the-boct.github.io/\">View Source</a>\r\n      </div>\r\n    </div>\r\n  ),\r\n\r\n  boctReply: (props: any) => (\r\n    <div className=\"boct_talk\">\r\n      <p>{props.text}</p>\r\n    </div>\r\n  ),\r\n};\r\n\r\nexport { CustomReplies };\r\n","import React from \"react\";\r\nimport { CustomReplies } from \"../other/\";\r\n\r\nimport { Reply_Context } from \"../../lib/\";\r\nimport { svg2, svg3, svg4 } from \"../../lib/svg-render\";\r\nimport \"./aboutField.css\";\r\n\r\n//Button for toggling the theme. default dark.\r\nclass ThemeButton extends React.Component {\r\n  ChangeTheme() {\r\n    let htmlElem = document.documentElement;\r\n\r\n    if (htmlElem.dataset.theme === \"dark\") {\r\n      htmlElem.setAttribute(\"data-theme\", \"light\");\r\n      localStorage.setItem(\"theme\", \"light\");\r\n    } else {\r\n      htmlElem.setAttribute(\"data-theme\", \"dark\");\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.ChangeTheme} title=\"Toggle Dark/Light Mode\">\r\n        <svg viewBox=\"0 0 512 512\">\r\n          <path id=\"svg4\" d={svg4} />\r\n        </svg>\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\n//On click, A boct will reply the information about this webApp\r\nclass InfoButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <Reply_Context.Consumer>\r\n        {(replyTech) => (\r\n          <button\r\n            onClick={() => {\r\n              replyTech?.addReply(<CustomReplies.InfoBoctReply />, \"cb\");\r\n            }}\r\n            id=\"infoBtn\"\r\n            title=\"Info\"\r\n          >\r\n            <svg viewBox=\"0 0 512 512\">\r\n              <path id=\"svg3\" d={svg3} />\r\n            </svg>\r\n          </button>\r\n        )}\r\n      </Reply_Context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nclass SettingsButton extends React.Component {\r\n  render() {\r\n    let message = (\r\n      <div className=\"boct_talk\">\r\n        <p>Will be Available in next update</p>\r\n      </div>\r\n    );\r\n    return (\r\n      <Reply_Context.Consumer>\r\n        {(replyTech) => (\r\n          <button onClick={() => replyTech.addReply(message, \"b\")} id=\"settingBtn\" title=\"Settings\">\r\n            <svg viewBox=\"0 0 512 512\">\r\n              <path id=\"svg2\" d={svg2} />\r\n            </svg>\r\n          </button>\r\n        )}\r\n      </Reply_Context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nfunction AboutPanel() {\r\n  return (\r\n    <div className=\"about\">\r\n      <fieldset>\r\n        <legend>About BOcT</legend>\r\n        <div className=\"aboutbtns\">\r\n          <SettingsButton />\r\n          <InfoButton />\r\n          <ThemeButton />\r\n        </div>\r\n        <p id=\"releaseVer\">Version 4 | Feb 2021</p>\r\n        <hr />\r\n        <p>BOcT is a Static Browser Chatbot</p>\r\n        <p>It's currently in Lazy Development</p>\r\n        <p>Future Updates to BOcT can make it perform basic Maths, Maybe suggest you some Movies...</p>\r\n      </fieldset>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { AboutPanel };\r\n\r\n/*\r\nclass PWAbutton extends React.Component {\r\n  addToHomeScreen = () => {\r\n    let deferredPrompt: any;\r\n    const addBtn = document.getElementById(\"pwaInstallBtn\") as HTMLButtonElement;\r\n\r\n    addBtn.hidden = true;\r\n    window.addEventListener(\"beforeinstallprompt\", (e: any) => {\r\n      e.preventDefault();\r\n      deferredPrompt = e;\r\n      addBtn.hidden = false;\r\n    });\r\n\r\n    addBtn.addEventListener(\"click\", async () => {\r\n      addBtn.hidden = true;\r\n      deferredPrompt.prompt();\r\n      const { outcome } = await deferredPrompt.userChoice;\r\n      console.log(`User response to the install prompt: ${outcome}`);\r\n      deferredPrompt = null;\r\n    });\r\n\r\n    window.addEventListener(\"appinstalled\", () => {\r\n      addBtn.hidden = true;\r\n      deferredPrompt = null;\r\n      console.log(\"PWA was installed\");\r\n    });\r\n    //addBtn.style.display = \"block\";\r\n  };\r\n  render() {\r\n    return (\r\n      <button id=\"pwaInstallBtn\" onClick={this.addToHomeScreen}>\r\n        install\r\n      </button>\r\n    );\r\n  }\r\n}\r\n*/","import React from \"react\";\r\nimport \"./settingsBar.css\";\r\n\r\nclass SettingsSideBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <aside className=\"settingbar\">\r\n        <h2>BOcT Settings</h2>\r\n        <label className=\"stg_contain\">\r\n          Open Chatbox by Default: <input type=\"checkbox\" id=\"stg_chat_open_default\" />\r\n        </label>\r\n\r\n        <button className=\"stg_btn\">Clear your Settings</button>\r\n\r\n        <button id=\"stg_clearchat\" className=\"stg_btn\">\r\n          Clear the Chat\r\n        </button>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\nexport default SettingsSideBar;\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Loading } from \"./components/\";\r\nimport \"./index.css\";\r\n\r\nconst currentThemeCokie = localStorage.getItem(\"theme\");\r\nif (currentThemeCokie) {\r\n  document.documentElement.setAttribute(\"data-theme\", currentThemeCokie);\r\n}\r\n\r\nconst Boct = React.lazy(async () => {\r\n  const [boctModuleImport] = await Promise.all([\r\n    import(\"./boct\"),\r\n    new Promise((resolve) => setTimeout(resolve, 2000)),\r\n  ]);\r\n  return boctModuleImport;\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Suspense fallback={<Loading />}>\r\n      <Boct />\r\n    </Suspense>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"Main\")\r\n);\r\n\r\n//import * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\r\n//serviceWorkerRegistration.registerX();\r\n\r\n//https://stackoverflow.com/questions/54158994/react-suspense-lazy-delay\r\n"],"sourceRoot":""}
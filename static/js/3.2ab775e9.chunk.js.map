{"version":3,"sources":["app/boct.tsx"],"names":["chatStorage","storageClass","Boct","props","boctOnClick","bind","setReply","state","boctClicked","allReplies","onlyElems","this","setState","replyJSX","replyBy","replyString","pushit","clickCapture","headAnim","replyContextValue","addReply","storage","Provider","value","React","Component"],"mappings":"+LASIA,EAAc,IAAIC,IAEhBC,E,kDACJ,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAEhB,EAAKE,MAAQ,CACXC,YAAa,EACbC,WAAYT,EAAYU,WAPJ,E,+CAWxB,WACEC,KAAKC,UAAS,SAACL,GACb,MAAO,CAAEC,YAAaD,EAAMC,YAAc,Q,sBAI9C,SAASK,EAAuBC,EAA0BC,GACxDA,EAAcA,GAA4B,MAC1Cf,EAAYgB,OAAS,CAAEH,WAAUC,UAASC,eAC1CJ,KAAKC,SAAS,CAAEH,WAAYT,EAAYU,c,oBAG1C,WACE,GAA+B,IAA3BC,KAAKJ,MAAMC,YACb,OACE,qCACE,cAAC,IAAD,CAAUS,aAAcN,KAAKP,YAAac,SAAS,0CACnD,cAAC,IAAD,OAKN,IAAIC,EAAoB,CACtBV,WAAYE,KAAKJ,MAAME,WACvBW,SAAUT,KAAKL,SACfe,QAASrB,GAEX,OACE,mCACE,eAAC,IAAasB,SAAd,CAAuBC,MAAOJ,EAA9B,UACE,cAAC,IAAD,CAAUF,aAAcN,KAAKP,YAAac,SAAS,SACnD,cAAC,IAAD,IACA,cAAC,IAAD,a,GA5CSM,IAAMC,WAmDVvB","file":"static/js/3.2ab775e9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AboutPanel, BoctHead, ChatBoct } from \"../components\";\r\nimport { storageClass, ReplyContext, ITypesOfReplies } from \"../util\";\r\n\r\ntype AppState = {\r\n  boctClicked: number;\r\n  allReplies: JSX.Element[];\r\n};\r\n\r\nlet chatStorage = new storageClass();\r\n\r\nclass Boct extends React.Component<{}, AppState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.boctOnClick = this.boctOnClick.bind(this);\r\n    this.setReply = this.setReply.bind(this);\r\n\r\n    this.state = {\r\n      boctClicked: 0,\r\n      allReplies: chatStorage.onlyElems,\r\n    };\r\n  }\r\n\r\n  boctOnClick() {\r\n    this.setState((state) => {\r\n      return { boctClicked: state.boctClicked + 1 };\r\n    });\r\n  }\r\n\r\n  setReply(replyJSX: JSX.Element, replyBy: ITypesOfReplies, replyString?: string) {\r\n    replyString = replyString ? replyString : \"e01\";\r\n    chatStorage.pushit = { replyJSX, replyBy, replyString };\r\n    this.setState({ allReplies: chatStorage.onlyElems });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.boctClicked === 0) {\r\n      return (\r\n        <>\r\n          <BoctHead clickCapture={this.boctOnClick} headAnim=\"beepbeep 2.5s ease-in-out 4s infinite\" />\r\n          <AboutPanel />\r\n        </>\r\n      );\r\n    }\r\n\r\n    let replyContextValue = {\r\n      allReplies: this.state.allReplies,\r\n      addReply: this.setReply,\r\n      storage: chatStorage,\r\n    };\r\n    return (\r\n      <>\r\n        <ReplyContext.Provider value={replyContextValue}>\r\n          <BoctHead clickCapture={this.boctOnClick} headAnim=\"none\" />\r\n          <ChatBoct />\r\n          <AboutPanel />\r\n        </ReplyContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Boct;\r\n"],"sourceRoot":""}